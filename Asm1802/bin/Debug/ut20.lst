ASM1802 v1.00
(C) 2017, Daniel Quadros https://dqsoft.blogspot.com

0000 ;               0001 
0000 ;               0002 ..  UT20 IS A UTILITY PROGRAM USED TO ALTER
0000 ;               0003 ..  MEMORY, DUMP MEMORY, AND BEGIN PROGRAM
0000 ;               0004 ..  EXECUTION ATA AGIVEN LOCATION. THE COMMANDS
0000 ;               0005 ..  ...
0000 ;               0006    PTER=#00   ..AUXILIARY FOR MAIN ROUTINE
0000 ;               0007      CL=#01   ..CLOBBERED
0000 ;               0008      ST=#02   ..STACK POINTER ONLU REFERENCE TO RAM
0000 ;               0009     SUB=#03   ..SUBROUTINE PROGRAM COUNTER
0000 ;               0010      PC=#05   ..MAIN PROGRAM COUNTER
0000 ;               0011  SWITCH=CL    ..DISTINGUISHES BETWEEM ?M AND !M
0000 ;               0012   DELAY=#0C   ..DELAY ROUTINE PROGRAM COUNTER
0000 ;               0013     ASL=#0D   ..HEX ASSEMBLY REGISTER ON INPUT;
0000 ;               0014               ..AUX FOR HEX OUTPUT
0000 ;               0015   CNTER=ASL   ..USED TO COUNT OUTPUT BYTES
0000 ;               0016     AUX=#0E   ..AUX.1 HOLDS BIT-TIME CONSTANT
0000 ;               0017    CHAR=#0F   ..CHAR.1 HOLDS I/O BYTE
0000 ;               0018    WRAM=#8C1F ..REGISTERS STORED IN TAM
0000 ;               0019  LOADER=#8400 ..LOCATION LOADER PROGRAM
0000 ;               0020 ..
0000 ;               0021 ..  ENTER IN R0
0000 ;               0022 ..
0000 ;               0023         ORG#8000                ..UT20 STARTS AT
8000 ;               0024                                 ..M(8000)
8000 7100;           0025         DIS,#00                 ..P=X=0
8002 F880B0;         0026         LDI A.1(UT20) ;PHI R0   ..HOLDS HIGH BIT
8005 ;               0027                                 ..AFTER FINGER OFF
8005 ;               0028 ..  MAY TRY TO GO TO 8000, NOT 0000
8005 ;               0029 ..  UNTIL FINGER IS OFF BUTTON
8005 ;               0030 ..
8005 ;               0031 ..  THE FOLLOWING WRITES REGISTER CONTENTS INTO
8005 ;               0032 ..  WRAM-32 THRU WRAM IF IT EXISTS. WRAM-34 ID
8005 ;               0033 ..  ASSUMED NOT TO BE RAM (ELSE ROUTINE OVERRUNS).
8005 ;               0034 
8005 ;               0035 ..
8005 F88CB1;         0036         LDI A.1(WRAM) ;PHI CL   ..CL IS CLOB-
8008 ;               0037                                 ..BERED
8008 F81EA1;         0038         LDI A.0(WRAM-1) ;PLO CL ..SET UP WHERE RF.0
800B ;               0039                                 ..IS TO GO, MINUS 1
800B F8A0B4;         0040         LDI #A0 ;PHI R4         ..R4.1 STORES A
800E ;               0041                                 ..MODIFIED INSTRUC.
800E E1;             0042         SEX CL
800F F8D051;         0043 LOOP2:  LDI #D0 ;STR CL         ..SET UP SEP INSTR.
8012 ;               0044                                 ..FOR RETURN
8012 F3;             0045         XOR                     ..CHECK IT WROTE
8013 3A29;           0046         BNZ UT20
8015 21;             0047         DEC CL                  ..PREPARE FOR MODI-
8016 ;               0048                                 ..FIED INSTRUCTION
8016 94FC70;         0049         GHI R4 ;ADI #70         ..IN THE 90'S?
8019 331D;           0050         BDF*+#04
801B FC21;           0051         ADI #21                 ..NO, 8N -> 9N
801D FC7F;           0052         ADI #7F                 ..YES, 9N -> 8(N-1)
801F B451;           0053         PHI R4 ;STR CL          ..SET MODIFIED
8021 ;               0054                                 ..INSTRUC INTO RAM
8021 D1;             0055         SEP CL                  ..EXECUTE INSTRUCS
8022 ;               0056                                 ..(80-9F)
8022 73;             0057         STXD                    ..STORE RESULT RAM
8023 21;             0058         DEC CL                  ..& VACK UP FOR
8024 94FB90;         0059         GHI R4 ;XRI#90        ..CK IF STORAGE DONE
8027 3A0F;           0060         BNZ LOOP2             ..NEXT BYTE
8029 ;               0061 ..
8029 90B5B3;         0062 UT20:   GHI R0 ;PHI PC ;PHI SUB ..#80->PC.1 & SUB.1
802C F830A5;         0063         LDI A.0(UT20A) ;PLO PC
802F D5;             0064         SEP PC
8030 E5;             0065 UT20A:  SEX PC
8031 7155;           0066         DIS,#55                 ..NOTE PC=5 ASSUMED
8033 6101;           0067         OUT 1,#01               ..SELECT RCA FROUP
8035 F88CB2;         0068         LDI A.1(WRAM)   ;PHI ST ..SET STACK POINTER
8038 F800A2;         0069         LDI#00   ;PLO ST
803B ;               0070                                 ..TO M(8C00), ONLY
803B ;               0071                                 ..RAM USED
803B F8FEA3;         0072         LDI A.0(TIMALC) ;PLO SUB..READ ONE CHAR
803E ;               0073                                 ..TO SET TIMER
803E D3;             0074         SEP SUB
803F ;               0075 ..
803F ;               0076 ... INITIATION NOW DONE
803F ;               0077 ..
803F F894A3;         0078 START:  LDI A.0(TYPE5D) ;PLO SUB
8042 F881B3;         0079         LDI A.1(TYPE5D)   ;PHI SUB
8045 D30D;           0080         SEP SUB; ,#0D           ..CR=CARRIAGE RET
8047 D30A;           0081 ST2:    SEP SUB; ,#0A           ..LF=LINE FEED
8049 D32A;           0082         SEP SUB; ,#2A           ..* PROMPT CHARAC
804B F800ADBD;       0083 IGNORE: LDI#00 ;PLO ASL;PHI ASL ..PREPARE TO INPUT
804F ;               0084                                 ..HEX DIGITS,
804F ;               0085                                 ..CLEAR ASL
804F F83BA3;         0086         LDI A.0(READAH) ;PLO SUB
8052 D3;             0087         SEP SUB                 ..INPUT COMMAND
8053 FB24;           0088         XRI #24                 ..IS IT "$" ?
8055 C28194;         0089         LBZ DOLLAR
8058 FB05;           0090         XRI #05                 ..IS IT "!" ?
805A ;               0091                                 ..TEST $ XRI !
805A A1;             0092         PLO SWITCH              ..AND SAVE RESULT
805B CE;             0093         LSZ
805C FB1E;           0094         XRI #1E                 ..IS IT "?" ?
805E ;               0095                                 ..TES $ XRI ! XRI ?
805E 3A4B;           0096         BNZ IGNORE              ..IGNORE ALL UNTIL
8060 ;               0097                                 ..COMMAND IS READ
8060 ;               0098 ..
8060 ;               0099 ..  THE FOLLOWING IS COMMON FOR ?M AND !M
8060 ;               0100 ..  (SWITCH.0 = 0 FOR LATTER)
8060 ;               0101 ..
8060 D3;             0102 RDARGS: SEP SUB                 ..NOTE SUB AT
8061 ;               0103                                 ..READAH. READ
8061 ;               0104                                 ..HEX ARGUMENTS
8061 FB4D;           0105         XRI #4D                 ..SHOULD BE "M"
8063 3ADC;           0106         BNZ ISITR               ..CK FOR ?R
8065 D3;             0107 RD1:    SEP SUB
8066 3B65;           0108         BNF *-#01               ..IGNORE NON HEX
8068 ;               0109                                 ..CHARS. AFTER "M"
8068 D3;             0110         SEP SUB
8069 3368;           0111         BDF *-#01               ..READ FIRST ARG
806B ;               0112                                 ..(LOCA IN MEMORY)
806B 9DB0;           0113         GHI ASL ;PHI PTER
806D 8DA0;           0114         GLO ASL ;PLO PTER       ..PTER NOW POINTS
806F ;               0115                                 ..TO USER MEMORY
806F F800ADBD;       0116         LDI#00 ;PLO ASL ;PHI ASL..CLEAR ASL
8073 1D;             0117         INC ASL                 ..?MXXXXCR PRINTS
8074 ;               0118                                 ..TWO HEX DIGITS
8074 9FFB0D;         0119         GHI RF   ;XRI#0D        ..CK FOR CR
8077 3A7E;           0120         BNZ TEST                ..BR IF NOT A CR
8079 81;             0121         GLO SWITCH
807A 3A8D;           0122         BNZ LINE-#03            ..BR IF ?
807C 30E1;           0123         BR SYNERR               ..OTHERWISE ERROR
807E FB2D;           0124 TEST:   XRI#2D                  ..CK FOR SPACE
8080 3AE1;           0125         BNZ SYNERR
8082 2D;             0126         DEC ASL                 ..ADJUST ASL
8083 81;             0127         GLO SWITCH              ..LOOK AT SWITCH
8084 32C6;           0128         BZ EX1                  ..IF 0 IT IS "!"
8086 ;               0129                                 ..OTHERWISE IT'S ?
8086 ;               0130 ..
8086 ;               0131 ..  THE FOLLOWING DOES (?M LOC COUNT) AND
8086 ;               0132 ..  (?MXXXXCR) COMMANDS
8086 D3;             0133 RD2:    SEP SUB
8087 3386;           0134         BDF RD2                 ..READ SECOND ARG
8089 ;               0135                                 ..(NUMBER OF BYTES)
8089 FB0D;           0136         XRI #0D                 ..NEXT CK FOR CR
808B 3AE1;           0137         BNZ SYNERR
808D F894A3;         0138         LDI A.0(TYPE5D) ;PLO SUB..TYPE
8090 D30A;           0139 LINE:   SEP SUB; ,#0A           ..LF
8092 90BF;           0140         GHI PTER ;PHI CHAR      ..PREPARE LINE
8094 ;               0141                                 ..HEADING
8094 F894A3;         0142         LDI A.0(TYPE2) ; PLO SUB
8097 D3;             0143         SEP SUB                 ..TYPE 2 HEX DIGITS
8098 80BF;           0144         GLO PTER ;PHI CHAR
809A F894A3;         0145         LDI A.0(TYPE2) ;PLO SUB
809D D3;             0146         SEP SUB                 ..TYPE OTHER TWO
809E D320;           0147 TSPACE: SEP SUB; ,#20           ..SPACE
80A0 ;               0148 ..
80A0 40BF;           0149 TLOOP:  LDA PTER ;PHI CHAR      ..FETCH ONE BYTE
80A2 ;               0150                                 ..FOR TYPING
80A2 F894A3;         0151         LDI A.0(TYPE2) ;PLO SUB
80A5 D3;             0152         SEP SUB                 ..TYPE 2 HEX
80A6 2D;             0153         DEC CNTER
80A7 8D;             0154         GLO CNTER
80A8 3AAD;           0155         BNZ TL3                 ..BRANCH NOT DONE
80AA 9D;             0156         GHI CNTER
80AB 323F;           0157         BZ START                ..BRANCH IF DONE
80AD 80FA0F;         0158 TL3:    GLO PTER ;ANI #0F       ..PTER DIV BY 16
80B0 3AB8;           0159         BNZ TL2
80B2 D33B;           0160         SEP SUB; ,#3B           ..YES TYPE ";"
80B4 D30D;           0161         SEP SUB; ,#0D           ..THEN CR
80B6 3090;           0162         BR LINE
80B8 F6;             0163 TL2:    SHR                     ..DIV BY 2?
80B9 33A0;           0164         BDF TLOOP               ..NO, LOOP BACK
80BB 309E;           0165         BR TSPACE               ..ELSE TYPE SPACE &
80BD ;               0166                                 ..LOOP BACK
80BD ;               0167 ..
80BD ;               0168 ..  THE FOLLOWING DOES (!M LOC DATA) COMMAND
80BD ;               0169 ..  ENTER AT EX1
80BD ;               0170 ..
80BD ;               0171 ..  EFFECT OF THE FOLLOWING IS TO READ IN HEX
80BD ;               0172 ..  TERMINATING WITH A CR, IGNORING NON-HEX CHAR
80BD ;               0173 ..  PAIRS; EXCEPTIONS: A COMMA BEFORE A CR ALLOWS
80BD ;               0174 ..  THE INPUT TO CONTINUE ON THE NEXT LINE AND A
80BD ;               0175 ..  SEMICOLON ALLOWS THE !M COMMAND TO BE ASSUMED.
80BD ;               0176 ..
80BD D3;             0177 EX3:    SEP SUB                 ..INPUT UNTIL A
80BE ;               0178                                 ..HEX IS READ
80BE 3BBD;           0179         BNF EX3
80C0 D3;             0180 EX2:    SEP SUB                 ..LOOK FOR SECOND
80C1 ;               0181                                 ..HEX DIGIT
80C1 3BE1;           0182         BNF SYNERR              ..BR IF NOT HEC
80C3 8D50;           0183         GLO ASL ;STR PTER       ..**SET BYTE**
80C5 10;             0184         INC PTER
80C6 D3;             0185 EX1:    SEP SUB                 ..NOTE SUB @ READAH
80C7 33C0;           0186         BDF EX2                 ..BRANCH IF HEX
80C9 FB0D;           0187         XRI #0D                 ..CHECK IF CR
80CB 323F;           0188         BZ START
80CD FB21;           0189 EX4:    XRI #21                 ..ELSE CK FOR COMMA
80CF ;               0190                                 ..(TEST CR XRI ",")
80CF 32BD;           0191         BZ EX3                  ..IF ELSE BRANCH
80D1 FB17;           0192         XRI #17                 ..ELSE CK FOR ";"
80D3 ;               0193                                 ..(TEST CR XRI
80D3 ;               0194                                 .."," XRI ";")
80D3 3AC6;           0195         BNZ EX1                 ..IGNORE ALL ELSE
80D5 D3;             0196         SEP SUB                 ..ON ";" IGNORE ALL
80D6 ;               0197                                 ..UNTIL CR, THEN
80D6 ;               0198                                 ..LOOP BACK
80D6 FB0D;           0199         XRI #0D
80D8 3AD5;           0200         BNZ *-03
80DA 3065;           0201         BR RD1                  ..THEN BRANCH BACK
80DC ;               0202                                 ..FOR !M COMMAND
80DC FB1F;           0203 ISITR:  XRI#1F                  ..IS IT R?
80DE C28194;         0204         LBZ TYPER               ..BR IF R
80E1 ;               0205 ..
80E1 F894A3;         0206 SYNERR: LDI A.0(TYPE5D);PLO SUB ..GENERAL RESULT
80E4 ;               0207                                 ..SYNTATIC ERROR
80E4 D30D;           0208         SEP SUB; ,#0D           ..CR
80E6 C08194;         0209         LBR FSYNER
80E9 ;               0210 ..
80E9 ;               0211 ..
80E9 ;               0212 ..
80E9 ;               0213 ..  SUBROUTINES
80E9 ;               0214 ..
80E9 ;               0215 ..
80E9 ;               0216         ORG*+#01
80EA ;               0217 ..  DELAY ROUTINE
80EA ;               0218 ..  DELAY IS (2(1+AUX.1(3+@SUB))
80EA ;               0219 ..  USED BY TYPE, READ, AND TIMALC.
80EA ;               0220 ..  AUX.1 IS ASSUMED TO HOLD A DELAY CONSTANT
80EA ;               0221 ..  =((BIT TIME OF TERMINAL)/
80EA ;               0222 ..  (20*INSTR TIME OF COSMAC))-1.
80EA ;               0223 ..  THIS CONSTANT CAN BE GENERATED
80EA ;               0224 ..  AUTOMATICALLY BY THE TIMALC ROUTINE.
80EA ;               0225 ..
80EA DCDCDCDC;       0226 DEXIT:  SEP RC;SEP RC;SEP RC;SEP RC     ..4 NOP'S
80EE D3;             0227         SEP SUB         ..RETURN
80EF 9EF6AE;         0228 DELAY1: GHI AUX ;SHR ;PLO AUX   ..SHIFT OUT
80F2 ;               0229                                 ..ECHO FLAG
80F2 2E;             0230 DELAY2: DEC AUX                 ..AUX.0 HOLDS BASIC
80F3 ;               0231                                 ..BIT DELAY
80F3 43FF01;         0232         LDA SUB ;SMI #01        ..PICK UP CONSTANT
80F6 3AF4;           0233         BNZ *-#02               ..LOOP AS SPECIFIED
80F8 ;               0234                                 ..BY CALL
80F8 8E;             0235         GLO AUX                 ..DONE YET?
80F9 32EA;           0236         BZ DEXIT
80FB 23;             0237         DEC SUB                 ..POINT SUB AT
80FC ;               0238                                 ..DELAY POINTER
80FC 30F2;           0239         BR DELAY2
80FE ;               0240 ..
80FE ;               0241 ..  ROUTINE TO CALCULATE BYTE TIME AND ECHO
80FE ;               0242 ..  FLAG.  WAITS FOR LF(NO ECHO) OR CR(ECHO)
80FE ;               0243 ..  TO BE TYPED IN. ALSO SETS UP POINTER TO
80FE ;               0244 ..  DELAY ROUTINE.
80FE ;               0245 ..  AUX.1 ENDS UP HOLDING, IN THE MOST
80FE ;               0246 ..  SIGNIFICANT 7 BITS, THE DELAY CONSTANT.
80FE ;               0247 ..  LEAST SIGNIFICANT BIT IS ZERO FOR ECHO,
80FE ;               0248 ..  ONE FOR NO ECHO.
80FE ;               0249 ..
80FE 93BC;           0250 TIMALC: GHI SUB ;PHI DELAY
8100 F8EFAC;         0251         LDI A.0(DELAY1) ;PLO DELAY
8103 F800AEAF;       0252         LDI #00 ;PLO AUX ;PLO CHAR
8107 ;               0253                                 ..DELAY ROUT. READY
8107 3707;           0254         B4*                     ..WAIT START BIT
8109 3F09;           0255         BN4*                    ..WAIT FOR FIRST
810B ;               0256                                 ..NONZERO DATA BIT
810B F803;           0257         LDI #03                 ..SET UP FOR 10
810D ;               0258                                 ..EXECUTIONS SO
810D ;               0259                                 ..ROUND-OFF MINIMAL
810D FF01;           0260 TC2:    SMI #01
810F 3A0D;           0261         BNZ *-#02
8111 8F;             0262         GLO CHAR                ..LOOK TO SEE IF
8112 ;               0263                                 ..DATA CHANGED
8112 ;               0264                                ..PREVIOUSLY
8112 3A17;           0265         BNZ ZRONE               ..BR IF IT 6HAD
8114 3719;           0266         B4 INCR                 ..ELSE LOOK FOR
8116 ;               0267                                 ..CHANGE TO ZERO
8116 ;               0268                                 ..BRANCH IF NO
8116 1F;             0269         INC CHAR                ..YES, SET SWITCH
8117 371E;           0270 ZRONE:  B4 DAUX                 ..LOOK FOR CHANGE
8119 ;               0271                                 ..TO 1, BR IF YES
8119 1E;             0272 INCR:   INC AUX
811A F807;           0273         LDI #07                 ..SET UP FOR 20
811C ;               0274                                 ..INSTRUCTION LOOPS
811C 300D;           0275         BR TC2
811E ;               0276 ..
811E ;               0277 ..  AUX.0 NOW HOLDS #LOOPS IN 2 BIT TIMES
811E ;               0278 ..
811E 2E2E;           0279 DAUX:   DEC AUX ;DEC AUX        ..REDUCE COUNT TO
8120 ;               0280                                 ..BALANCE FIXED
8120 ;               0281                                 ..OVERLOAD IN
8120 ;               0282                                 ..CALLING DELAY
8120 8EF901BE;       0283         GLO AUX ;ORI #01 ;PHI AUX..LSB AUX.1 = 1.5
8124 DC0C;           0284         SEP RC; ,#0C            ..BIT TIME DELAY
8126 3F2C;           0285         BN4 WAIT                ..BR IF LF(NO ECHO)
8128 ;               0286                                 ..LSB AUX.1=1
8128 9EFAFE;         0287         GHI AUX ;ANI#FE
812B BE;             0288         PHI AUX                 ..CR(ECHO)
812C ;               0289                                 ..LSB AUX.1=0
812C DC26;           0290 WAIT:   SEP RC; ,#26
812E D5;             0291         SEP R5
812F ;               0292 ..
812F ;               0293 ..
812F ;               0294 ..  READ ROUTINE--READS 1 BYTE INTO CHAR.1. WHEN
812F ;               0295 ..  ENTERED VIA READAH, THEN IN INPUT IS A HEX
812F ;               0296 ..  DIGIT ITS HEX VALUE IS SHIFTED INTO ASL FROM
812F ;               0297 ..  THE RIGHT AND DF=1, ELSE DF=0; CLOBBERS CHAR,
812F ;               0298 ..  AUX.0, (ASL ON READAH).  LEAVES BYTE IN D
812F ;               0299 ..  (BUT CLOVVERED IF SUBR LINKAGE IS USED).
812F ;               0300 ..  LEAVES PC AT READAH ENTRY POINT; EXITS TO R5
812F ;               0301 ..
812F ;               0302 ..
812F ;               0303 ..     WARNING: READ PROCESS HAS NOT FINISHED.  DO
812F ;               0304 ..     NOT TYPE IMMEDIATELY, OR ELSE ENTER TYPE VIA
812F ;               0305 ..     TYPE5D.
812F ;               0306 ..
812F ;               0307 ..
812F FC07;           0308 CKDEC:  ADI #07                 ..CK FOR ASCII
8131 ;               0309                                 ..DECIMAL INPUT
8131 3337;           0310         BDF NFND
8133 FC0A;           0311         ADI #0A
8135 3377;           0312         BDF FND                 ..SUB NET 30
8137 FC00;           0313 NFND:   ADI #00                 ..SETS DF=0
8139 9F;             0314 REXIT:  GHI CHAR                ..CHARACTER INTO D
813A D5;             0315         SEP R5
813B F800;           0316 READAH: LDI #00
813D 38;             0317         SKP                     ..SKIP OVER
813E ;               0318                                 ..TO READ1
813E 93;             0319 READ:   GHI SUB                 ..CONSTANT WITH
813F ;               0320                                 ..A VALUE > 0
813F AF;             0321 READ1:  PLO CHAR                ..SET ENTRY FLAG
8140 F880BF;         0322 READ2:  LDI #80 ;PHI CHAR       ..INITIALIZE INPUT
8143 ;               0323                                 ..BYTE-WHEN SHIFTED
8143 ;               0324                                 ..80 IS 1, WILL BE
8143 ;               0325                                 ..DONE
8143 E2;             0326         SEX ST
8144 3F44;           0327         BN4 *                   ..WAIT FOR END OF
8146 ;               0328                                 ..LAST DATA BIT
8146 3746;           0329         B4 *                    ..WAIT FOR PRESENT
8148 ;               0330                                 ..START BIT
8148 DC02;           0331         SEP RC; ,#02            ..DELAY HALF
814A ;               0332                                 ..BIT TIME
814A ;               0333 ..
814A F80052;         0334 NObIT:  LDI #00 ;STR ST
814D 9EFA01;         0335 LOOP5:  GHI AUX ;ANI #01        ..CHECK IF ECHO
8150 ;               0336                                 ..INDICATOR IS
8150 ;               0337                                 ..LSB OF AUX.1
8150 F152;           0338         OR ;STR ST              ..OUTPUT IS ONE(NO
8152 ;               0339                                 ..EFFECT) ON NOECHO
8152 6722;           0340         OUT 7 ;DEC ST
8154 ;               0341 ..
8154 DC07;           0342 LOOP5B: SEP RC; ,#07            ..DELAY ONE
8156 ;               0343                                 ..BIT TIME
8156 F80152;         0344         LDI #01 ;STR ST
8159 9FF6BF;         0345         GHI CHAR ;SHR ;PHI CHAR ..SHIFT INPUT CHAR.
815C 3365;           0346         BDF NEXT                ..BR IF INPUT
815E ;               0347                                 ..FINISHED D=CHAR.1
815E F980;           0348         ORI #80
8160 3F4A;           0349         BN4 NOBIT               ..BR IF INPUT
8162 ;               0350                                 ..BIT A ZERO
8162 BF;             0351         PHI CHAR                ..ELSE PUT OK'D
8163 ;               0352                                 ..VALUE AWAY
8163 304D;           0353         BR LOOP5
8165 ;               0354 ..
8165 ;               0355 ..  NOW HAVE BYTE READ INTO CHAR.1
8165 ;               0356 ..
8165 6722;           0357 NEXT:   OUT 7; DEC ST           ..OUTPUT STOP BIT
8167 3240;           0358         BZ READ2                ..BR IF D=0,
8169 ;               0359                                 ..CHAR.1 IS A NULL
8169 8F;             0360         GLO CHAR                ..CHECK ENTRY FLAG
816A 3A39;           0361         BNZ REXIT               ..BR IF ENTRY VIA
816C ;               0362                                 ..READ
816C 9F;             0363 CKHXE:  GHI CHAR
816D FF41;           0364         SMI #41                 ..CK FOR ASCII HEX
816F 3B2F;           0365         BNF CKDEC               ..AT TOP OF ROUTINE
8171 FF06;           0366         SMI #06                 ..CK FOR A THRU F
8173 3337;           0367         BDF NFND
8175 FC10;           0368         ADI #10                 ..SUB NET 37
8177 ;               0369 ..
8177 AE;             0370 FND:    PLO AUX                 ..SAVE TO SHIFT
8178 ;               0371                                 ..INTO ASL
8178 9D;             0372         GHI ASL
8179 FCFCFCFC;       0373         SHL ;SHL ;SHL ;SHL      ..SHIFT ASL.1
817D ;               0374                                 ..LEFT FOUR
817D 52;             0375         STR ST
817E 8D;             0376         GLO ASL
817F F6F6F6F6;       0377         SHR ;SHR ;SHR ;SHR      ..SHIFT ASL.0 RT 4
8183 F1BD;           0378         OR ;PHI ASL             ..COMBINE
8185 8D;             0379         GLO ASL
8186 FCFCFCFC;       0380         SHL ;SHL ;SHL ;SHL      ..SHIFT ASL.0
818A ;               0381                                 ..LEFT FOUR
818A 52;             0382         STR ST
818B 8EFA0FF1AD;     0383         GLO AUX ;ANI #0F ;OR ;PLO ASL ..COMBINE
8190 FF00;           0384         SMI #00                 ..SET DF
8192 3039;           0385         BR REXIT
8194 ;               0386 ..
8194 ;               0387 ..  TYPE ROUTINA -- TYPES 1 BYTE FROM @R5!, @R6!,
8194 ;               0388         
8194 ;               0389 DOLLAR:
8194 ;               0390 
8194 ;               0391 
8194 ;               0392 TYPE2:
8194 ;               0393 
8194 ;               0394 TYPER:
8194 ;               0395 
8194 ;               0396 TYPE5D:
8194 ;               0397 
8194 ;               0398 FSYNER:
8194 ;               0399 
8194 ;               0400 
8194 ;               0401 
8194 ;               0402 
8194 ;               0403 
8194 ;               0404 
8194 ;               0405 
8194 ;               0406 
8194 ;               0407 
8194 ;               0408 
8194 ;               0409 
8194 ;               0410 
8194 ;               0411 
8194 ;               0412 
8194 ;               0413 
8194 ;               0414 
8194 ;               0415 
8194 ;               0416 
8194 ;               0417 
8194 ;               0418 
8194 ;               0419 
8194 ;               0420      
8194 ;               0421 END
0 errors

Symbol Table

Symbol   Hex    Dec
PTER     0000     0
CL       0001     1
ST       0002     2
SUB      0003     3
PC       0005     5
SWITCH   0001     1
DELAY    000C    12
ASL      000D    13
CNTER    000D    13
AUX      000E    14
CHAR     000F    15
WRAM     8C1F 35871
LOADER   8400 33792
LOOP2    800F 32783
UT20     8029 32809
UT20A    8030 32816
START    803F 32831
ST2      8047 32839
IGNORE   804B 32843
RDARGS   8060 32864
RD1      8065 32869
TEST     807E 32894
RD2      8086 32902
LINE     8090 32912
TSPACE   809E 32926
TLOOP    80A0 32928
TL3      80AD 32941
TL2      80B8 32952
EX3      80BD 32957
EX2      80C0 32960
EX1      80C6 32966
EX4      80CD 32973
ISITR    80DC 32988
SYNERR   80E1 32993
DEXIT    80EA 33002
DELAY1   80EF 33007
DELAY2   80F2 33010
TIMALC   80FE 33022
TC2      810D 33037
ZRONE    8117 33047
INCR     8119 33049
DAUX     811E 33054
WAIT     812C 33068
CKDEC    812F 33071
NFND     8137 33079
REXIT    8139 33081
READAH   813B 33083
READ     813E 33086
READ1    813F 33087
READ2    8140 33088
NOBIT    814A 33098
LOOP5    814D 33101
LOOP5B   8154 33108
NEXT     8165 33125
CKHXE    816C 33132
FND      8177 33143
DOLLAR   8194 33172
TYPE2    8194 33172
TYPER    8194 33172
TYPE5D   8194 33172
FSYNER   8194 33172

